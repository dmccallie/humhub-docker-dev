services:
  humhub:
    image: humhub/humhub-dev:${HUMHUB_DOCKER_VERSION}
    ports:
      - 127.0.0.1:8404:8404
    depends_on:
      db:
        condition: service_healthy
    
    # dpm added restart always to ensure the service is restarted on failure
    restart: always
    
    volumes:
      - ./humhub-data:/var/lib/humhub
    env_file:
      - ./humhub.env
    environment:
      - HUMHUB_CONFIG__COMPONENTS__DB__DSN=${HUMHUB_DOCKER_DB_DSN}
      - HUMHUB_CONFIG__COMPONENTS__DB__USERNAME=${HUMHUB_DOCKER_DB_USER}
      - HUMHUB_CONFIG__COMPONENTS__DB__PASSWORD=${HUMHUB_DOCKER_DB_PASSWORD}
      - HUMHUB_FIXED_SETTINGS__BASE__BASE_URL=https://${HUMHUB_DOCKER_DOMAIN}
      - HUMHUB_FIXED_SETTINGS__BASE__CACHE_CLASS=yii\redis\Cache
      - HUMHUB_CONFIG__COMPONENTS__REDIS__CLASS=yii\redis\Connection
      - HUMHUB_CONFIG__COMPONENTS__REDIS__HOSTNAME=redis
      - HUMHUB_CONFIG__COMPONENTS__REDIS__PORT=6379
      - HUMHUB_CONFIG__COMPONENTS__REDIS__DATABASE=0
      - HUMHUB_CONFIG__COMPONENTS__SESSION__CLASS=yii\redis\Session

  db:
    image: mariadb
    restart: always
    user: root
    # tell mariadb-dump to add a drop database and drop table statement so that 
    #  the restore use a clean database
    # note the hard-coded database name humhub (FIXME?)
    labels:
      - "docker-volume-backup.archive-pre=/bin/sh -c 'mariadb-dump \
        --databases humhub \
        --add-drop-database \
        --add-drop-table \
        --default-character-set=utf8mb4 \
        -u${HUMHUB_DOCKER_DB_USER} \
        -p${HUMHUB_DOCKER_DB_PASSWORD} \
        > /tmp/dumps/dump.sql'"
    volumes:
      - ./mysql-data:/var/lib/mysql
      - db-dump:/tmp/dumps
    environment:
        - MYSQL_ROOT_PASSWORD=${HUMHUB_DOCKER_DB_PASSWORD}
    expose:
      - 127.0.0.1:3306:3306
    healthcheck:
      test:  ["CMD", "/usr/local/bin/healthcheck.sh", "--su-mysql", "--connect",  "--innodb_initialized"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  caddy:
    image: caddy:latest
    ports:
      - 8080:80
      - 443:443
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./caddy-data:/data
    environment:
      - caddydomain=${HUMHUB_DOCKER_DOMAIN}      
    restart: always
  redis:
    image: redis:6.2-alpine
    ports:
      - 127.0.0.1:6379:6379
    restart: always
    command: redis-server --save 20 1 --loglevel warning
    volumes: 
      - cache:/data

  # dpm add offen/docker-volume-backup sidecar for testing
  # must use version v2 to support mariadb-dump
  backup:
    image: offen/docker-volume-backup:v2
    restart: always
    env_file:
      - ./backup.env
    volumes:
      # bind-mount the HumHub data dir read-only into /backup/humhub-data
      - ./humhub-data:/backup/humhub-data:ro
      # volume mount the MySQL temp dump read-only into /backup/db-dump
      - db-dump:/backup/db-dump:ro
      # make a local copy for testing
      - ./backups-local:/archive
      # - ./caddy-data:/data/caddy-data
      # allow the backup container to stop & start the HumHub container
      - /var/run/docker.sock:/var/run/docker.sock:ro      
    
    # optional: label humhub so itâ€™s stopped during backup for consistency
    # labels:
    #   - docker-volume-backup.stop-during-backup=true
    
    environment:
      # every day at 2am
      BACKUP_CRON_EXPRESSION: 0 2 * * *
      BACKUP_FILENAME: backup-humhubdata-%Y-%m-%dT%H-%M-%S.tar.gz
      BACKUP_PRUNING_PREFIX: backup-
      BACKUP_RETENTION_DAYS: 14

volumes:
  cache:
    driver: local
  db-dump: